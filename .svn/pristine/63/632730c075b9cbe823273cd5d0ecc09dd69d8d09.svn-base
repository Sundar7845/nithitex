<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use App\Models\Seller;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class SellerApproveController extends Controller
{
    public function ResellerView()
    {
        $data = Seller::where('is_verified',1)->get();
        if (Auth::user()->hasPermissionTo('All Resellers')) {
			return view('admin.admin_resellers_view',compact('data'));
		} else {
			return view('401');
		}  
    }

    public function customerView()
    {
        $data = User::where('userrole_id',1)->get();
        if (Auth::user()->hasPermissionTo('All Customers')) {
			return view('admin.customer',compact('data'));
		} else {
			return view('401');
		}
    }

    private function isCustomer($email)
    {
        $user = User::where('email',$email)->first();
        if (!$user) {
            return false;
        }else{
            return true;
        }        
    }

    public function ResellerRequest()
    {
        $data=Seller::where('is_verified',0)->get();

        // foreach ($data as $value) {
        //     if ($this->isCustomer($value->email)) {
        //         $user = $this->isCustomer($value->email);
        //     } 
        // } 
        if (Auth::user()->hasPermissionTo('Reseller Requests')) {
			return view('admin.admin_resellers_request',compact('data'));
		} else {
			return view('401');
		}
    }

    public function ResellerApprove($id)
    {
        Seller::where('id',$id)->update([
            'is_verified'=> 1
        ]);
        $seller = Seller::where('id',$id)->first();
        $user = User::where('email',$seller->email)->orWhere('phone',$seller->phone)->first();

        if ($user) {
            User::where('id',$user->id)->update([
                'email' => $seller->email,
                'password' => $seller->password,
                'phone' => $seller->phone,
                'userrole_id' => 2
            ]);
        }
        else{
            User::create([
                'name' => $seller->name,
                'email' => $seller->email,
                'password' => $seller->password,
                'phone' => $seller->phone,
                'userrole_id' => 2  
            ]);
        }
        $notification = array(
            'message' => 'Seller Approved Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }

    public function ResellerDelete($id)
    {
        $nafil = Seller::find($id);
        $nafil->delete();
        return back();
    }
}
