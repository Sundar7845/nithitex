<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use App\Models\Order;
use App\Traits\Utils;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Http;

class ReturnController extends Controller
{
    use Utils;
    public function ReturnRequest()
    {
    	$orders = Order::with('user','seller')->where('return_order',1)->where('userrole_id',1)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Customer Return Request'), Auth::user()->id)) {
			return view('backend.return_order.return_request',compact('orders'));
		} else {
			return view('401');
		}
    }

    public function sellerReturnRequest()
    {
    	$orders = Order::with('user','seller')->where('return_order',1)->where('userrole_id',2)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Reseller Return Request'), Auth::user()->id)) {
			return view('backend.return_order.seller_return_request',compact('orders'));
		} else {
			return view('401');
		}
    }

    public function cancelRequest()
    {
    	$orders = Order::with('user','seller')->where('cancel_request',1)->where('userrole_id',1)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Customer Cancel Request'), Auth::user()->id)) {
			return view('backend.return_order.cancel_request',compact('orders'));
		} else {
			return view('401');
		}
    }

    public function sellerCancelRequest()
    {
    	$orders = Order::with('user','seller')->where('cancel_request',1)->where('userrole_id',2)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Reseller Cancel Request'), Auth::user()->id)) {
			return view('backend.return_order.seller_cancel_request',compact('orders'));
		} else {
			return view('401');
		}
    }

    public function ReturnRequestApprove($order_id)
    {
        $order = Order::where('id',$order_id)->first();
    	Order::where('id',$order_id)->update([
            'return_order' => 2,
            'status' => 'returned'
        ]);

    	$notification = array(
            'message' => 'Order Returned Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);


    } // end mehtod 

    public function sellerReturnRequestApprove($order_id)
    {
    	Order::where('id',$order_id)->update([
            'return_order' => 2,
            'status' => 'returned'
        ]);

    	$notification = array(
            'message' => 'Order Returned Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);
    }

    public function cancelRequestApprove($order_id)
    {
    	$this->approveCancelRequest($order_id, 0);
    	$notification = array(
            'message' => 'Order Cancelled Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);
    }

    public function sellerCancelRequestApprove($order_id)
    {
    	$this->approveCancelRequest($order_id, 1);
    	$notification = array(
            'message' => 'Order Cancelled Successfully',
            'alert-type' => 'success'
        );
        return redirect()->back()->with($notification);
    }

    private function approveCancelRequest($order_id, $isSeller){

        $userorder = Order::join('users','users.id','orders.user_id')->where('orders.id',$order_id)->select('users.phone','users.email','users.name')->first();
        
        if($isSeller == 0) {
            $mobile = Order::where('id', $order_id)->pluck('phone')->first();
        }
        else{
            $mobile = $userorder->phone;
        }


        Order::where('id',$order_id)->update([
            'cancel_request' => 2,
            'status' => 'cancelled'
        ]);

        Http::post('http://pay4sms.in/sendsms/?token=9a2edf41bc2760c4c5bb0b592eaf7bfb&credit=2&sender=NITHTX&message=Your order has been Cancelled.Check your status here: https://nithitex.com/track-your-order ,Nithitex.	&number='.$mobile.'');


    }
    public function ReturnAllRequest(){

    	$orders = Order::with('user','seller')->where('return_order',2)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Return Orders List'), Auth::user()->id)) {
			return view('backend.return_order.all_return_request',compact('orders'));
		} else {
			return view('401');
		}
    }
    public function cancelAllRequest()
    {
    	$orders = Order::with('user','seller')->where('cancel_request',2)->orderBy('id','DESC')->get();
        if ($this->checkUserPermission(Auth::user()->hasPermissionTo('Cancel Orders List'), Auth::user()->id)) {
			return view('backend.return_order.all_cancel_request',compact('orders'));
		} else {
			return view('401');
		}
    }
}
