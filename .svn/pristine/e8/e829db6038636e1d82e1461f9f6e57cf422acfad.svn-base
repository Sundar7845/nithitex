<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use App\Models\Coupon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class CouponController extends Controller
{
    public function coupon()
    {
        $coupon = Coupon::get();
        return view('backend.settings.coupon.coupon', compact('coupon'));
    }

    public function couponStore(Request $request)
    {
        $request->validate([
            'coupon_name' => 'required|unique:coupons',
            'coupon_code' => 'required|unique:coupons',
            'discount_percentage' => 'required',
            'start_date'  => 'required|after:yesterday',
            'end_date'    => 'required|after:start_date'
        ]);

        Coupon::create([
            'coupon_name' => $request->coupon_name,
            'coupon_code' => $request->coupon_code,
            'start_date' => $request->start_date,
            'end_date' => $request->end_date,
            'is_common' => $request->common,
            'discount_percentage' => $request->discount_percentage
        ]);

        $notification = array(
            'message' => 'Coupon Created Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);
    }

    public function couponEdit($id)
    {
        $coupon = Coupon::findOrFail($id);
        return view('backend.settings.coupon.coupon_edit', compact('coupon'));
    }

    public function couponUpdate(Request $request)
    {
        $coupon_id = $request->id;
        $request->validate([
            'coupon_name' => 'required',
            'coupon_code' => 'required',
            'discount_percentage' => 'required',
            'start_date'  => 'required|after:yesterday',
            'end_date'    => 'required|after:start_date'
        ]);

        Coupon::findOrFail($coupon_id)->update([
            'coupon_name' => $request->coupon_name,
            'coupon_code' => $request->coupon_code,
            'start_date' => $request->start_date,
            'end_date' => $request->end_date,
            'is_common' => $request->common,
            'discount_percentage' => $request->discount_percentage
        ]);

        $notification = array(
            'message' => 'Coupon Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('coupon.all')->with($notification);
    }

    public function couponUpdateStatus(Request $request)
    {
        Coupon::where('id', $request->id)->update([
            'is_active' => $request->active
        ]);

        $notification = array(
            'message' => 'Coupon Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('coupon.all')->with($notification);
    }
}
